{
  "version": 3,
  "sources": ["../src/frame/cssBridge.ts", "../src/frame/controlsBridge.ts", "../src/frame/exportBridge.ts", "../src/frame/dependencyManager.ts", "../src/frame/utils/dom.ts", "../src/frame/runtime.ts", "../src/frame/index.ts"],
  "sourcesContent": [
    "const CLONE_ATTRIBUTE = 'data-hyper-frame-clone';\nconst SUPPORTED_NODE_NAMES = new Set(['STYLE', 'LINK']);\n\n// Export for use by parent window CSS sync senders\nexport const CSS_SYNC_MESSAGE_TYPE = 'hyper-frame:css-sync';\n\ninterface CssBridgeOptions {\n  sourceDocument?: Document | null;\n  targetDocument?: Document | null;\n  mirror?: boolean;\n}\n\ninterface CssSyncMessage {\n  type: typeof CSS_SYNC_MESSAGE_TYPE;\n  action: 'init' | 'add' | 'remove' | 'update';\n  id?: string;\n  tagName?: string;\n  attributes?: Record<string, string>;\n  textContent?: string;\n}\n\ntype NodeMapping = WeakMap<Node, Node>;\n\nexport class CssBridge {\n  private source: Document | null;\n  private target: Document | null;\n  private observer: MutationObserver | null = null;\n  private nodeMap: NodeMapping = new WeakMap();\n  private active = false;\n  private messageListener: ((event: MessageEvent) => void) | null = null;\n  private usePostMessage = false;\n  private cssNodesById = new Map<string, HTMLElement>();\n\n  constructor(options: CssBridgeOptions = {}) {\n    // Try to access parent document, but handle cross-origin errors gracefully\n    let sourceDoc: Document | null = null;\n    if (options.sourceDocument) {\n      sourceDoc = options.sourceDocument;\n    } else if (typeof window !== 'undefined') {\n      try {\n        // This will throw SecurityError if cross-origin\n        sourceDoc = window.parent?.document ?? null;\n      } catch (error) {\n        // Cross-origin access blocked - use postMessage instead\n        console.debug('[hyper-frame] Using postMessage for CSS sync (cross-origin)');\n        this.usePostMessage = true;\n        sourceDoc = null;\n      }\n    }\n\n    this.source = sourceDoc;\n    this.target = options.targetDocument ?? (typeof document !== 'undefined' ? document : null);\n    this.active = Boolean(options.mirror ?? true);\n  }\n\n  start() {\n    if (!this.active) return;\n\n\n\n    if (this.usePostMessage) {\n      // Use postMessage for cross-origin CSS sync\n      this.startPostMessageMode();\n    } else if (this.source && this.target) {\n      // Use direct DOM access for same-origin\n      this.cleanupPreviousClones();\n      this.syncAll();\n      this.attachObserver();\n    } else {\n      console.warn('[hyper-frame] Unable to mirror CSS â€“ missing source or target document.');\n    }\n  }\n\n  stop() {\n    this.observer?.disconnect();\n    this.observer = null;\n    this.nodeMap = new WeakMap();\n    this.cleanupPreviousClones();\n\n    if (this.messageListener && typeof window !== 'undefined') {\n      window.removeEventListener('message', this.messageListener);\n      this.messageListener = null;\n    }\n\n    this.cssNodesById.clear();\n  }\n\n  private startPostMessageMode() {\n    if (!this.target || typeof window === 'undefined') return;\n\n    this.cleanupPreviousClones();\n\n    this.messageListener = (event: MessageEvent) => {\n      if (!event.data || event.data.type !== CSS_SYNC_MESSAGE_TYPE) return;\n      this.handleCssMessage(event.data as CssSyncMessage);\n    };\n\n    window.addEventListener('message', this.messageListener);\n    console.debug('[hyper-frame] CSS postMessage receiver ready');\n  }\n\n  private handleCssMessage(message: CssSyncMessage) {\n    if (!this.target) return;\n\n    switch (message.action) {\n      case 'init':\n        // Initial CSS sync - clear and prepare\n        this.cleanupPreviousClones();\n        this.cssNodesById.clear();\n        break;\n\n      case 'add':\n        if (message.id && message.tagName) {\n          this.addCssNode(message.id, message.tagName, message.attributes, message.textContent);\n        }\n        break;\n\n      case 'remove':\n        if (message.id) {\n          this.removeCssNode(message.id);\n        }\n        break;\n\n      case 'update':\n        if (message.id) {\n          this.updateCssNode(message.id, message.attributes, message.textContent);\n        }\n        break;\n    }\n  }\n\n  private addCssNode(id: string, tagName: string, attributes?: Record<string, string>, textContent?: string) {\n    if (!this.target) return;\n    if (this.cssNodesById.has(id)) return; // Already exists\n\n    const element = document.createElement(tagName);\n    element.setAttribute(CLONE_ATTRIBUTE, 'true');\n    element.setAttribute('data-css-id', id);\n\n    if (attributes) {\n      for (const [key, value] of Object.entries(attributes)) {\n        element.setAttribute(key, value);\n      }\n    }\n\n    if (textContent) {\n      element.textContent = textContent;\n    }\n\n    this.target.head.appendChild(element);\n    this.cssNodesById.set(id, element);\n  }\n\n  private removeCssNode(id: string) {\n    const element = this.cssNodesById.get(id);\n    if (element && element.parentNode) {\n      element.parentNode.removeChild(element);\n      this.cssNodesById.delete(id);\n    }\n  }\n\n  private updateCssNode(id: string, attributes?: Record<string, string>, textContent?: string) {\n    const element = this.cssNodesById.get(id);\n    if (!element) return;\n\n    if (attributes) {\n      // Remove old attributes except special ones\n      for (const attr of Array.from(element.attributes)) {\n        if (!attr.name.startsWith('data-')) {\n          element.removeAttribute(attr.name);\n        }\n      }\n\n      // Set new attributes\n      for (const [key, value] of Object.entries(attributes)) {\n        element.setAttribute(key, value);\n      }\n    }\n\n    if (textContent !== undefined) {\n      element.textContent = textContent;\n    }\n  }\n\n  private cleanupPreviousClones() {\n    if (!this.target) return;\n    this.target\n      .querySelectorAll(`[${CLONE_ATTRIBUTE}=\"true\"]`)\n      .forEach((node) => node.parentNode?.removeChild(node));\n  }\n\n  private syncAll() {\n    if (!this.source || !this.target) return;\n    const head = this.source.head;\n    const nodes = Array.from(head.children).filter((node) => SUPPORTED_NODE_NAMES.has(node.nodeName));\n\n    nodes.forEach((node) => {\n      const clone = this.cloneNode(node);\n      if (!clone) return;\n      this.target?.head.appendChild(clone);\n      this.nodeMap.set(node, clone);\n    });\n  }\n\n  private attachObserver() {\n    if (!this.source || !this.target) return;\n    if (this.observer) return;\n\n    this.observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        switch (mutation.type) {\n          case 'childList':\n            this.handleChildListMutation(mutation);\n            break;\n          case 'characterData':\n            this.handleCharacterDataMutation(mutation);\n            break;\n          case 'attributes':\n            this.handleAttributeMutation(mutation);\n            break;\n        }\n      });\n    });\n\n    this.observer.observe(this.source.head, {\n      childList: true,\n      subtree: true,\n      characterData: true,\n      attributes: true,\n    });\n  }\n\n  private handleChildListMutation(mutation: MutationRecord) {\n    if (!this.target) return;\n\n    mutation.removedNodes.forEach((node) => {\n      const mapped = this.nodeMap.get(node);\n      if (mapped && mapped.parentNode) {\n        mapped.parentNode.removeChild(mapped);\n        this.nodeMap.delete(node);\n      }\n    });\n\n    mutation.addedNodes.forEach((node) => {\n      if (!(node instanceof HTMLElement)) return;\n      if (!SUPPORTED_NODE_NAMES.has(node.nodeName)) return;\n\n      const clone = this.cloneNode(node);\n      if (!clone) return;\n\n      const reference = mutation.nextSibling ? this.nodeMap.get(mutation.nextSibling) : null;\n      if (reference && reference.parentNode) {\n        reference.parentNode.insertBefore(clone, reference);\n      } else {\n        this.target?.head.appendChild(clone);\n      }\n\n      this.nodeMap.set(node, clone);\n    });\n  }\n\n  private handleCharacterDataMutation(mutation: MutationRecord) {\n    const targetNode = mutation.target;\n    const parent = targetNode.parentNode;\n    if (!parent) return;\n    const mappedParent = this.nodeMap.get(parent);\n    if (!mappedParent) return;\n\n    mappedParent.textContent = parent.textContent;\n  }\n\n  private handleAttributeMutation(mutation: MutationRecord) {\n    const target = mutation.target as Element;\n    const mapped = this.nodeMap.get(target);\n    if (!mapped || !(mapped instanceof Element)) return;\n\n    if (mutation.attributeName) {\n      const value = target.getAttribute(mutation.attributeName);\n      if (value === null) {\n        mapped.removeAttribute(mutation.attributeName);\n      } else {\n        mapped.setAttribute(mutation.attributeName, value);\n      }\n    }\n  }\n\n  private cloneNode(node: Node): HTMLElement | null {\n    if (!(node instanceof HTMLElement)) return null;\n    if (!SUPPORTED_NODE_NAMES.has(node.nodeName)) return null;\n\n    const clone = node.cloneNode(true) as HTMLElement;\n    clone.setAttribute(CLONE_ATTRIBUTE, 'true');\n    return clone;\n  }\n}\n",
    "import type {\n  ControlDefinitions,\n  ControlPanelOptions,\n  ControlChangePayload,\n  SandboxContext,\n} from './types';\n\ninterface HypertoolControlsApi {\n  createControlPanel: (\n    definitions: ControlDefinitions,\n    options: {\n      title?: string;\n      position?: string;\n      expanded?: boolean;\n      container?: HTMLElement | string | null;\n      onChange?: (params: Record<string, any>, context: any) => void;\n    },\n  ) => {\n    params: Record<string, any>;\n    dispose: () => void;\n  } & Record<string, any>;\n}\n\nexport interface ControlsBridgeInitOptions {\n  definitions: ControlDefinitions;\n  options?: ControlPanelOptions;\n  context: SandboxContext;\n  onControlChange?: (change: ControlChangePayload) => void;\n}\n\nexport class ControlsBridge {\n  private controlsApi: HypertoolControlsApi;\n\n  constructor() {\n    this.controlsApi = this.resolveControlsApi();\n  }\n\n  private resolveControlsApi(): HypertoolControlsApi {\n    if (typeof window === 'undefined') {\n      throw new Error('[hyper-frame] window is not available');\n    }\n    const hyperWindow = window as unknown as { hypertoolControls?: HypertoolControlsApi };\n    if (!hyperWindow.hypertoolControls) {\n      throw new Error('[hyper-frame] hypertool controls are not available on window');\n    }\n    return hyperWindow.hypertoolControls;\n  }\n\n  init(options: ControlsBridgeInitOptions) {\n\n    const panelOptions = options.options || {};\n    const controls = this.controlsApi.createControlPanel(options.definitions, {\n      title: panelOptions.title,\n      position: panelOptions.position,\n      expanded: panelOptions.expanded,\n      container: panelOptions.container,\n      onChange: (params: Record<string, any>, changeContext: any) => {\n        const change: ControlChangePayload = {\n          key: changeContext.key,\n          value: changeContext.value,\n          event: changeContext.event,\n        };\n\n        options.onControlChange?.(change);\n\n        if (typeof panelOptions.onChange === 'function') {\n          panelOptions.onChange(change, options.context);\n        }\n      },\n    });\n\n    return controls;\n  }\n}\n",
    "import type {\n  SandboxCaptureFn,\n  SandboxCaptureResult,\n  SandboxExportsApi,\n  SandboxImageCaptureHandler,\n  SandboxVideoCaptureHandler,\n} from './types';\n\ninterface ExportBridgeOptions {\n  container: HTMLElement;\n  position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n  filename?: string;\n}\n\ninterface NormalizedImageCapture {\n  capture: SandboxCaptureFn;\n  filename?: string;\n  mimeType?: string;\n}\n\ninterface NormalizedVideoCapture {\n  requestStream: () => Promise<MediaStream> | MediaStream;\n  filename?: string;\n  mimeType?: string;\n  bitsPerSecond?: number;\n  timeSlice?: number;\n}\n\nexport class ExportBridge {\n  private container: HTMLElement;\n  private position: ExportBridgeOptions['position'];\n  private filename: string;\n  private root: HTMLDivElement | null = null;\n  private imageButton: HTMLButtonElement | null = null;\n  private videoButton: HTMLButtonElement | null = null;\n  private statusLabel: HTMLSpanElement | null = null;\n  private statusTimeout: number | null = null;\n  private userImageCapture: NormalizedImageCapture | null = null;\n  private userVideoCapture: NormalizedVideoCapture | null = null;\n  private defaultCanvasCaptureEnabled = false;\n  private recording = false;\n  private recorder: MediaRecorder | null = null;\n  private recordedChunks: Blob[] = [];\n\n  constructor(options: ExportBridgeOptions) {\n    this.container = options.container;\n    this.position = options.position;\n    this.filename = options.filename ?? 'hyperframe-export';\n    this.mount();\n  }\n\n  private mount() {\n    if (typeof document === 'undefined') {\n      return;\n    }\n\n    const root = document.createElement('div');\n    root.className = 'hyper-frame-export-widget';\n    root.dataset.hyperFrame = 'export-widget';\n    Object.assign(root.style, {\n      position: 'fixed',\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '0.25rem',\n      // padding: '0.5rem 0.75rem',\n      borderRadius: '0.75rem',\n      // background: 'rgba(15, 23, 42, 0.85)',\n      color: '#f8fafc',\n      fontFamily: 'Roboto, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont',\n      fontSize: '12px',\n      lineHeight: '16px',\n      // boxShadow: '0 20px 40px rgba(15, 23, 42, 0.3)',\n      zIndex: '2147483646',\n      pointerEvents: 'auto',\n      // backdropFilter: 'blur(8px)',\n    } as CSSStyleDeclaration);\n\n    const controls = document.createElement('div');\n    controls.style.display = 'flex';\n    controls.style.flexDirection = 'row';\n    controls.style.alignItems = 'center';\n    controls.style.justifyContent = 'space-between';\n    controls.style.gap = '0.5rem';\n\n    const imageButton = document.createElement('button');\n    imageButton.type = 'button';\n    imageButton.textContent = 'Capture PNG';\n    imageButton.style.flex = '1 1 auto';\n    imageButton.style.padding = '0.35rem 0.6rem';\n    imageButton.style.border = '0';\n    imageButton.style.borderRadius = '0.5rem';\n    imageButton.style.cursor = 'pointer';\n    imageButton.style.background = 'rgba(94, 234, 212, 0.2)';\n    imageButton.style.color = '#5eead4';\n    imageButton.style.fontWeight = '600';\n\n    const videoButton = document.createElement('button');\n    videoButton.type = 'button';\n    videoButton.textContent = 'Record Video';\n    videoButton.style.flex = '1 1 auto';\n    videoButton.style.padding = '0.35rem 0.6rem';\n    videoButton.style.border = '0';\n    videoButton.style.borderRadius = '0.5rem';\n    videoButton.style.cursor = 'pointer';\n    videoButton.style.background = 'rgba(129, 140, 248, 0.2)';\n    videoButton.style.color = '#a5b4fc';\n    videoButton.style.fontWeight = '600';\n\n    imageButton.addEventListener('click', () => this.handleImageCapture(), { passive: true });\n    videoButton.addEventListener('click', () => this.toggleRecording(), { passive: true });\n\n    const status = document.createElement('span');\n    status.style.display = 'block';\n    status.style.color = '#e2e8f0';\n    status.style.opacity = '0.8';\n    status.style.minHeight = '16px';\n\n    controls.appendChild(imageButton);\n    controls.appendChild(videoButton);\n    // root.appendChild(controls);\n    // root.appendChild(status);\n\n    this.root = root;\n    this.imageButton = imageButton;\n    this.videoButton = videoButton;\n    this.statusLabel = status;\n\n    this.applyPosition();\n    document.body.appendChild(root);\n    this.updateButtonStates();\n  }\n\n  private applyPosition() {\n    if (!this.root) return;\n\n    const position = this.position ?? 'top-left';\n    const offsets: Record<string, Partial<CSSStyleDeclaration>> = {\n      'bottom-right': { bottom: '1rem', right: '1rem', top: '', left: '' },\n      'bottom-left': { bottom: '1rem', left: '1rem', top: '', right: '' },\n      'top-right': { top: '1rem', right: '1rem', bottom: '', left: '' },\n      'top-left': { top: '1rem', left: '1rem', bottom: '', right: '' },\n    };\n\n    const styles = offsets[position];\n    Object.assign(this.root.style, styles);\n  }\n\n  private setStatus(message: string, tone: 'default' | 'error' | 'success' = 'default') {\n    if (!this.statusLabel) return;\n\n    if (this.statusTimeout) {\n      window.clearTimeout(this.statusTimeout);\n      this.statusTimeout = null;\n    }\n\n    this.statusLabel.textContent = message;\n\n    switch (tone) {\n      case 'error':\n        this.statusLabel.style.color = '#fca5a5';\n        break;\n      case 'success':\n        this.statusLabel.style.color = '#bbf7d0';\n        break;\n      default:\n        this.statusLabel.style.color = '#e2e8f0';\n    }\n\n    if (message) {\n      this.statusTimeout = window.setTimeout(() => {\n        if (this.statusLabel) {\n          this.statusLabel.textContent = '';\n          this.statusLabel.style.color = '#e2e8f0';\n        }\n        this.statusTimeout = null;\n      }, 4000);\n    }\n  }\n\n  private updateButtonStates() {\n    if (this.imageButton) {\n      this.imageButton.disabled = !this.getActiveImageCapture();\n      this.imageButton.style.opacity = this.imageButton.disabled ? '0.6' : '1';\n    }\n\n    if (this.videoButton) {\n      const hasVideo = Boolean(this.getActiveVideoCapture());\n      this.videoButton.disabled = !hasVideo;\n      this.videoButton.style.opacity = hasVideo ? '1' : '0.6';\n    }\n  }\n\n  private normalizeImageCapture(\n    handler: SandboxImageCaptureHandler | SandboxCaptureFn | null,\n  ): NormalizedImageCapture | null {\n    if (!handler) return null;\n\n    if (typeof handler === 'function') {\n      return { capture: handler };\n    }\n\n    return {\n      capture: handler.capture,\n      filename: handler.filename,\n      mimeType: handler.mimeType,\n    };\n  }\n\n  private normalizeVideoCapture(handler: SandboxVideoCaptureHandler | null): NormalizedVideoCapture | null {\n    if (!handler) return null;\n\n    return {\n      requestStream: handler.requestStream,\n      filename: handler.filename,\n      mimeType: handler.mimeType,\n      bitsPerSecond: handler.bitsPerSecond,\n      timeSlice: handler.timeSlice,\n    };\n  }\n\n  private getActiveImageCapture(): NormalizedImageCapture | null {\n    if (this.userImageCapture) {\n      return this.userImageCapture;\n    }\n    if (this.defaultCanvasCaptureEnabled) {\n      return {\n        capture: () => this.captureCanvasSnapshot(),\n        filename: undefined,\n        mimeType: 'image/png',\n      };\n    }\n    return null;\n  }\n\n  private getActiveVideoCapture(): NormalizedVideoCapture | null {\n    if (this.userVideoCapture) {\n      return this.userVideoCapture;\n    }\n    if (this.defaultCanvasCaptureEnabled) {\n      return {\n        requestStream: () => this.captureCanvasStream(),\n        filename: undefined,\n        mimeType: 'video/webm;codecs=vp9',\n      };\n    }\n    return null;\n  }\n\n  private async captureCanvasSnapshot(): Promise<SandboxCaptureResult> {\n    const canvas = this.container.querySelector('canvas');\n    if (!(canvas instanceof HTMLCanvasElement)) {\n      throw new Error('No canvas element available for capture.');\n    }\n\n    return new Promise<Blob | null>((resolve, reject) => {\n      canvas.toBlob((blob) => {\n        if (blob) {\n          resolve(blob);\n        } else {\n          reject(new Error('Canvas capture returned an empty blob.'));\n        }\n      });\n    });\n  }\n\n  private async captureCanvasStream(): Promise<MediaStream> {\n    const canvas = this.container.querySelector('canvas');\n    if (!(canvas instanceof HTMLCanvasElement)) {\n      throw new Error('No canvas element available for recording.');\n    }\n    if (typeof canvas.captureStream !== 'function') {\n      throw new Error('Canvas captureStream API is not supported in this browser.');\n    }\n    return canvas.captureStream(60);\n  }\n\n  private async handleImageCapture() {\n    const handler = this.getActiveImageCapture();\n    if (!handler) {\n      this.setStatus('No capture handler available', 'error');\n      return;\n    }\n\n    try {\n      this.setBusy(true, 'image');\n      const result = await handler.capture();\n      const blob = await this.resolveCaptureResult(result, handler.mimeType ?? 'image/png');\n      if (blob) {\n        const filename = handler.filename ?? `${this.filename}.png`;\n        this.downloadBlob(blob, filename);\n        this.setStatus('PNG exported', 'success');\n      }\n    } catch (error) {\n      console.error('[hyper-frame] Failed to capture image', error);\n      this.setStatus((error as Error).message || 'Failed to capture image', 'error');\n    } finally {\n      this.setBusy(false, 'image');\n    }\n  }\n\n  private async toggleRecording() {\n    if (this.recording) {\n      this.stopRecording();\n      return;\n    }\n\n    const handler = this.getActiveVideoCapture();\n    if (!handler) {\n      this.setStatus('No recorder available', 'error');\n      return;\n    }\n\n    if (typeof MediaRecorder === 'undefined') {\n      this.setStatus('MediaRecorder is not supported in this browser', 'error');\n      return;\n    }\n\n    try {\n      const stream = await handler.requestStream();\n      if (!stream) {\n        throw new Error('Recording stream is not available');\n      }\n\n      this.recordedChunks = [];\n      const recorder = new MediaRecorder(stream, {\n        mimeType: handler.mimeType,\n        videoBitsPerSecond: handler.bitsPerSecond,\n      });\n\n      recorder.addEventListener('dataavailable', (event) => {\n        if (event.data?.size) {\n          this.recordedChunks.push(event.data);\n        }\n      });\n\n      recorder.addEventListener('stop', () => {\n        const blob = new Blob(this.recordedChunks, { type: handler.mimeType ?? 'video/webm' });\n        const filename = handler.filename ?? `${this.filename}.webm`;\n        this.downloadBlob(blob, filename);\n        this.setStatus('Recording saved', 'success');\n        stream.getTracks().forEach((track) => track.stop());\n        this.recording = false;\n        this.updateRecordingUi();\n      });\n\n      recorder.start(handler.timeSlice);\n      this.recorder = recorder;\n      this.recording = true;\n      this.setStatus('Recording in progressâ€¦');\n      this.updateRecordingUi();\n    } catch (error) {\n      console.error('[hyper-frame] Failed to start recording', error);\n      this.setStatus((error as Error).message || 'Failed to record video', 'error');\n      this.recording = false;\n      this.recorder = null;\n      this.updateRecordingUi();\n    }\n  }\n\n  private stopRecording() {\n    if (!this.recorder) {\n      return;\n    }\n\n    this.setStatus('Finishing recordingâ€¦');\n    this.recorder.stop();\n    this.recorder = null;\n    this.recording = false;\n    this.updateRecordingUi();\n  }\n\n  private updateRecordingUi() {\n    if (!this.videoButton) return;\n\n    this.videoButton.textContent = this.recording ? 'Stop Recording' : 'Record Video';\n    this.videoButton.style.background = this.recording ? 'rgba(248, 113, 113, 0.25)' : 'rgba(129, 140, 248, 0.2)';\n    this.videoButton.style.color = this.recording ? '#fecaca' : '#a5b4fc';\n  }\n\n  private async resolveCaptureResult(result: SandboxCaptureResult, mimeType: string): Promise<Blob | null> {\n    if (!result) {\n      return null;\n    }\n\n    if (result instanceof Blob) {\n      return result;\n    }\n\n    if (typeof result === 'string') {\n      if (result.startsWith('data:')) {\n        const response = await fetch(result);\n        return await response.blob();\n      }\n      const response = await fetch(result);\n      return await response.blob();\n    }\n\n    if (result instanceof HTMLCanvasElement) {\n      return await new Promise<Blob | null>((resolve, reject) => {\n        result.toBlob((blob) => {\n          if (blob) {\n            resolve(blob);\n          } else {\n            reject(new Error('Canvas export failed.'));\n          }\n        }, mimeType);\n      });\n    }\n\n    if (typeof OffscreenCanvas !== 'undefined' && result instanceof OffscreenCanvas) {\n      const blob = await result.convertToBlob({ type: mimeType });\n      return blob;\n    }\n\n    return null;\n  }\n\n  private downloadBlob(blob: Blob, filename: string) {\n    if (typeof window === 'undefined') {\n      return;\n    }\n\n    const url = URL.createObjectURL(blob);\n    const anchor = document.createElement('a');\n    anchor.href = url;\n    anchor.download = filename;\n    anchor.rel = 'noopener';\n    anchor.style.display = 'none';\n    document.body.appendChild(anchor);\n    anchor.click();\n    document.body.removeChild(anchor);\n    URL.revokeObjectURL(url);\n  }\n\n  private setBusy(busy: boolean, mode: 'image' | 'video') {\n    const button = mode === 'image' ? this.imageButton : this.videoButton;\n    if (!button) return;\n    button.disabled = busy;\n    button.style.opacity = busy ? '0.6' : '1';\n  }\n\n  setFilename(filename: string) {\n    this.filename = filename;\n  }\n\n  setVisible(visible: boolean) {\n    if (!this.root) return;\n    this.root.style.display = visible ? 'flex' : 'none';\n  }\n\n  registerImageCapture(handler: SandboxImageCaptureHandler | SandboxCaptureFn | null) {\n    this.userImageCapture = this.normalizeImageCapture(handler);\n    this.updateButtonStates();\n  }\n\n  registerVideoCapture(handler: SandboxVideoCaptureHandler | null) {\n    this.userVideoCapture = this.normalizeVideoCapture(handler);\n    this.updateButtonStates();\n  }\n\n  useDefaultCanvasCapture(enable: boolean = true) {\n    this.defaultCanvasCaptureEnabled = enable;\n    this.updateButtonStates();\n  }\n\n  getApi(): SandboxExportsApi {\n    return {\n      registerImageCapture: (handler) => this.registerImageCapture(handler),\n      registerVideoCapture: (handler) => this.registerVideoCapture(handler),\n      setFilename: (filename) => this.setFilename(filename),\n      setVisible: (visible) => this.setVisible(visible),\n      useDefaultCanvasCapture: (enable?: boolean) => this.useDefaultCanvasCapture(enable),\n      destroy: () => this.destroy(),\n    };\n  }\n\n  destroy() {\n    if (this.statusTimeout) {\n      window.clearTimeout(this.statusTimeout);\n      this.statusTimeout = null;\n    }\n\n    if (this.root?.parentNode) {\n      this.root.parentNode.removeChild(this.root);\n    }\n\n    this.root = null;\n    this.imageButton = null;\n    this.videoButton = null;\n    this.statusLabel = null;\n    this.recorder = null;\n    this.recording = false;\n    this.recordedChunks = [];\n  }\n}\n",
    "export type ExternalDependencyType = 'script' | 'style';\n\nexport interface ExternalDependency {\n  type: ExternalDependencyType;\n  url: string;\n  attributes?: Record<string, string>;\n  integrity?: string;\n  crossOrigin?: string;\n}\n\nexport class DependencyManager {\n  private pending: Map<string, Promise<void>> = new Map();\n\n  ensure(dependency: ExternalDependency): Promise<void> {\n    const key = this.createKey(dependency);\n    if (this.pending.has(key)) {\n      return this.pending.get(key)!;\n    }\n\n    const task = this.load(dependency);\n    this.pending.set(key, task);\n    return task;\n  }\n\n  async ensureAll(dependencies: ExternalDependency[] = []): Promise<void> {\n    for (const dependency of dependencies) {\n      await this.ensure(dependency);\n    }\n  }\n\n  private createKey(dependency: ExternalDependency): string {\n    return `${dependency.type}:${dependency.url}`;\n  }\n\n  private load(dependency: ExternalDependency): Promise<void> {\n    switch (dependency.type) {\n      case 'script':\n        return this.injectScript(dependency);\n      case 'style':\n        return this.injectStyle(dependency);\n      default:\n        return Promise.reject(new Error(`[hyper-frame] Unsupported dependency type: ${dependency.type}`));\n    }\n  }\n\n  private injectScript(dependency: ExternalDependency): Promise<void> {\n    if (typeof document === 'undefined') {\n      return Promise.reject(new Error('[hyper-frame] document is not available'));\n    }\n\n    const existing = Array.from(document.querySelectorAll<HTMLScriptElement>('script')).find(\n      (script) => script.src === dependency.url,\n    );\n    if (existing) {\n      return Promise.resolve();\n    }\n\n    return new Promise((resolve, reject) => {\n      const script = document.createElement('script');\n      script.src = dependency.url;\n      script.async = true;\n      script.dataset.hyperFrame = 'external';\n\n      if (dependency.integrity) {\n        script.integrity = dependency.integrity;\n      }\n      if (dependency.crossOrigin) {\n        script.crossOrigin = dependency.crossOrigin;\n      }\n      if (dependency.attributes) {\n        Object.entries(dependency.attributes).forEach(([key, value]) => {\n          script.setAttribute(key, value);\n        });\n      }\n\n      script.addEventListener('load', () => resolve(), { once: true });\n      script.addEventListener('error', () => reject(new Error(`[hyper-frame] Failed to load script ${dependency.url}`)), {\n        once: true,\n      });\n\n      document.head.appendChild(script);\n    });\n  }\n\n  private injectStyle(dependency: ExternalDependency): Promise<void> {\n    if (typeof document === 'undefined') {\n      return Promise.reject(new Error('[hyper-frame] document is not available'));\n    }\n\n    const existing = Array.from(document.querySelectorAll<HTMLLinkElement>('link[rel=\"stylesheet\"]')).find(\n      (link) => link.href === dependency.url,\n    );\n    if (existing) {\n      return Promise.resolve();\n    }\n\n    return new Promise((resolve, reject) => {\n      const link = document.createElement('link');\n      link.rel = 'stylesheet';\n      link.href = dependency.url;\n      link.dataset.hyperFrame = 'external';\n\n      if (dependency.attributes) {\n        Object.entries(dependency.attributes).forEach(([key, value]) => {\n          link.setAttribute(key, value);\n        });\n      }\n\n      link.addEventListener('load', () => resolve(), { once: true });\n      link.addEventListener('error', () => reject(new Error(`[hyper-frame] Failed to load stylesheet ${dependency.url}`)), {\n        once: true,\n      });\n\n      document.head.appendChild(link);\n    });\n  }\n}\n",
    "export interface ResolvedContainer {\n  element: HTMLElement;\n  createdInternally: boolean;\n}\n\nexport interface ResolveContainerOptions {\n  target?: HTMLElement | string | null;\n  containerClassName?: string;\n  documentRef?: Document;\n}\n\nexport function resolveContainer(options: ResolveContainerOptions = {}): ResolvedContainer {\n  const doc = options.documentRef ?? document;\n  if (!doc) {\n    throw new Error('[hyper-frame] document is not available');\n  }\n\n  const className = options.containerClassName || 'hypertool-sketch';\n  const target = options.target;\n\n  if (target instanceof HTMLElement) {\n    target.classList.add(className);\n    return { element: target, createdInternally: false };\n  }\n\n  if (typeof target === 'string' && target.trim().length > 0) {\n    const node = doc.querySelector<HTMLElement>(target);\n    if (node) {\n      node.classList.add(className);\n      return { element: node, createdInternally: false };\n    }\n    console.warn(`[hyper-frame] Could not find container for selector \"${target}\", creating one instead.`);\n  }\n\n  const container = doc.createElement('div');\n  container.classList.add(className);\n  container.classList.add('hyper-frame-container');\n  doc.body.appendChild(container);\n  return { element: container, createdInternally: true };\n}\n",
    "import { CssBridge } from './cssBridge';\nimport { ControlsBridge } from './controlsBridge';\nimport { ExportBridge } from './exportBridge';\nimport { DependencyManager, ExternalDependency } from './dependencyManager';\nimport {\n  HyperFrameRuntimeApi,\n  HyperFrameRuntimeConfig,\n  HyperFrameSandboxHandle,\n  HyperFrameSandboxOptions,\n  SandboxContext,\n  SandboxControlsHandle,\n  SandboxEnvironment,\n} from './types';\nimport { resolveContainer } from './utils/dom';\n\nfunction runCleanups(cleanups: Array<() => void>) {\n  while (cleanups.length > 0) {\n    const cleanup = cleanups.pop();\n    if (cleanup) {\n      try {\n        cleanup();\n      } catch (error) {\n        console.error('[hyper-frame] cleanup failed', error);\n      }\n    }\n  }\n}\n\nexport class HyperFrameRuntime implements HyperFrameRuntimeApi {\n  private dependencyManager = new DependencyManager();\n  private cssBridge: CssBridge | null = null;\n  private config: HyperFrameRuntimeConfig;\n\n  constructor(config: HyperFrameRuntimeConfig = {}) {\n    this.config = config;\n  }\n\n  async ensureDependencies(dependencies: ExternalDependency[] = []): Promise<void> {\n    if (!dependencies.length) {\n      return;\n    }\n\n    await this.dependencyManager.ensureAll(dependencies);\n  }\n\n  mirrorCss(): void {\n    if (this.cssBridge) {\n      return;\n    }\n\n    this.cssBridge = new CssBridge({ mirror: this.config.mirrorCss !== false });\n    this.cssBridge.start();\n  }\n\n  async createSandbox(options: HyperFrameSandboxOptions): Promise<HyperFrameSandboxHandle> {\n    if (options.dependencies?.length) {\n      await this.ensureDependencies(options.dependencies);\n    }\n\n    if (this.config.mirrorCss !== false && options.mirrorCss !== false) {\n      this.mirrorCss();\n    }\n\n    const mount = this.createMount(options.mount);\n    const cleanups: Array<() => void> = [];\n    const pushCleanup = (cleanup: () => void) => {\n      if (typeof cleanup === 'function') {\n        cleanups.push(cleanup);\n      }\n    };\n\n    const exportBridge = new ExportBridge({\n      container: mount.container,\n      position: options.exportWidget?.position,\n      filename: options.exportWidget?.filename,\n    });\n\n    if (options.exportWidget?.enabled === false) {\n      exportBridge.setVisible(false);\n    }\n\n    if (options.exportWidget?.useCanvasCapture !== false) {\n      exportBridge.useDefaultCanvasCapture(true);\n    }\n\n    const environment = this.createEnvironment(pushCleanup);\n\n    const context: SandboxContext = {\n      mount: mount.container,\n      params: {},\n      controls: null,\n      exports: exportBridge.getApi(),\n      runtime: this,\n      environment,\n    };\n\n    let controlsHandle: SandboxControlsHandle | null = null;\n\n    if (options.controls?.definitions) {\n      const controlsBridge = new ControlsBridge();\n      controlsHandle = controlsBridge.init({\n        definitions: options.controls.definitions,\n        options: options.controls.options,\n        context,\n        onControlChange: (change) => {\n          options.controls?.onChange?.(change, context);\n        },\n      }) as SandboxControlsHandle;\n\n      context.controls = controlsHandle;\n      context.params = controlsHandle?.params ?? {};\n\n      pushCleanup(() => {\n        if (!controlsHandle) return;\n        if (typeof controlsHandle.destroy === 'function') {\n          controlsHandle.destroy();\n        } else if (typeof controlsHandle.dispose === 'function') {\n          controlsHandle.dispose();\n        }\n      });\n    }\n\n    pushCleanup(() => exportBridge.destroy());\n    pushCleanup(() => mount.destroy());\n\n    let setupCleanup: void | (() => void);\n    try {\n      setupCleanup = await options.setup(context);\n    } catch (error) {\n      console.error('[hyper-frame] sandbox setup failed', error);\n      runCleanups(cleanups);\n      throw error;\n    }\n\n    if (typeof setupCleanup === 'function') {\n      pushCleanup(() => {\n        try {\n          setupCleanup?.();\n        } catch (error) {\n          console.error('[hyper-frame] teardown failed', error);\n        }\n      });\n    }\n\n    const handle: HyperFrameSandboxHandle = {\n      container: mount.container,\n      controls: controlsHandle,\n      params: context.params,\n      destroy: () => {\n        runCleanups(cleanups);\n      },\n    };\n\n    return handle;\n  }\n\n  private createEnvironment(pushCleanup: (cleanup: () => void) => void): SandboxEnvironment {\n    if (typeof window === 'undefined' || typeof document === 'undefined') {\n      throw new Error('[hyper-frame] window or document is not available');\n    }\n\n    return {\n      window,\n      document,\n      addCleanup: (cleanup: () => void) => {\n        if (typeof cleanup === 'function') {\n          pushCleanup(cleanup);\n        }\n      },\n      onResize: (handler: () => void, options?: AddEventListenerOptions) => {\n        window.addEventListener('resize', handler, options);\n        const dispose = () => window.removeEventListener('resize', handler, options);\n        pushCleanup(dispose);\n        return dispose;\n      },\n    };\n  }\n\n  private createMount(options?: HyperFrameSandboxOptions['mount']): { container: HTMLElement; destroy(): void } {\n    const baseOptions = options as any;\n    const resolved = resolveContainer({\n      target: baseOptions?.target,\n      containerClassName: baseOptions?.containerClassName,\n    });\n\n    if (typeof baseOptions?.onReady === 'function') {\n      baseOptions.onReady({ container: resolved.element });\n    }\n\n    return {\n      container: resolved.element,\n      destroy: () => {\n        if (resolved.createdInternally) {\n          resolved.element.remove();\n        }\n      },\n    };\n  }\n}\n",
    "import { HyperFrameRuntime } from './runtime';\nimport type {\n  HyperFrameRuntimeConfig,\n  HyperFrameSandboxHandle,\n  HyperFrameSandboxOptions,\n} from './types';\n\nconst defaultConfig: HyperFrameRuntimeConfig = { mirrorCss: true };\nconst runtime = new HyperFrameRuntime(defaultConfig);\n\nexport { runtime };\n\nexport function configureRuntime(config: HyperFrameRuntimeConfig) {\n  return new HyperFrameRuntime(config);\n}\n\nexport function createSandbox(options: HyperFrameSandboxOptions): Promise<HyperFrameSandboxHandle> {\n  return runtime.createSandbox(options);\n}\n\nexport function ensureDependencies(options?: HyperFrameSandboxOptions['dependencies']) {\n  return runtime.ensureDependencies(options ?? []);\n}\n\nexport function mirrorCss() {\n  runtime.mirrorCss();\n}\n\nexport function attachToWindow() {\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  const hyperWindow = window as unknown as { hyperFrame?: Record<string, any> };\n  const existing = hyperWindow.hyperFrame || {};\n\n  const api = {\n    version: 'universal',\n    runtime,\n    createSandbox,\n    ensureDependencies,\n    mirrorCss,\n  };\n\n  hyperWindow.hyperFrame = { ...existing, ...api };\n}\n\nattachToWindow();\n\nexport type { HyperFrameSandboxOptions, HyperFrameSandboxHandle };\n"
  ],
  "mappings": "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",
  "debugId": "72611941C0BD640764756E2164756E21",
  "names": []
}